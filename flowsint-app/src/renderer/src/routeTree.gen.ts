/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as MiddlewareRouteImport } from './routes/middleware'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthDashboardRouteImport } from './routes/_auth.dashboard'
import { Route as AuthDashboardIndexRouteImport } from './routes/_auth.dashboard.index'
import { Route as AuthDashboardVaultRouteImport } from './routes/_auth.dashboard.vault'
import { Route as AuthDashboardToolsRouteImport } from './routes/_auth.dashboard.tools'
import { Route as AuthDashboardTransformsIndexRouteImport } from './routes/_auth.dashboard.transforms.index'
import { Route as AuthDashboardInvestigationsIndexRouteImport } from './routes/_auth.dashboard.investigations.index'
import { Route as AuthDashboardTransformsTransformIdRouteImport } from './routes/_auth.dashboard.transforms.$transformId'
import { Route as AuthDashboardInvestigationsInvestigationIdIndexRouteImport } from './routes/_auth.dashboard.investigations.$investigationId.index'
import { Route as AuthDashboardInvestigationsInvestigationIdTypeIdRouteImport } from './routes/_auth.dashboard.investigations.$investigationId.$type.$id'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const MiddlewareRoute = MiddlewareRouteImport.update({
  id: '/middleware',
  path: '/middleware',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthDashboardRoute = AuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDashboardIndexRoute = AuthDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthDashboardRoute,
} as any)
const AuthDashboardVaultRoute = AuthDashboardVaultRouteImport.update({
  id: '/vault',
  path: '/vault',
  getParentRoute: () => AuthDashboardRoute,
} as any)
const AuthDashboardToolsRoute = AuthDashboardToolsRouteImport.update({
  id: '/tools',
  path: '/tools',
  getParentRoute: () => AuthDashboardRoute,
} as any)
const AuthDashboardTransformsIndexRoute =
  AuthDashboardTransformsIndexRouteImport.update({
    id: '/transforms/',
    path: '/transforms/',
    getParentRoute: () => AuthDashboardRoute,
  } as any)
const AuthDashboardInvestigationsIndexRoute =
  AuthDashboardInvestigationsIndexRouteImport.update({
    id: '/investigations/',
    path: '/investigations/',
    getParentRoute: () => AuthDashboardRoute,
  } as any)
const AuthDashboardTransformsTransformIdRoute =
  AuthDashboardTransformsTransformIdRouteImport.update({
    id: '/transforms/$transformId',
    path: '/transforms/$transformId',
    getParentRoute: () => AuthDashboardRoute,
  } as any)
const AuthDashboardInvestigationsInvestigationIdIndexRoute =
  AuthDashboardInvestigationsInvestigationIdIndexRouteImport.update({
    id: '/investigations/$investigationId/',
    path: '/investigations/$investigationId/',
    getParentRoute: () => AuthDashboardRoute,
  } as any)
const AuthDashboardInvestigationsInvestigationIdTypeIdRoute =
  AuthDashboardInvestigationsInvestigationIdTypeIdRouteImport.update({
    id: '/investigations/$investigationId/$type/$id',
    path: '/investigations/$investigationId/$type/$id',
    getParentRoute: () => AuthDashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/middleware': typeof MiddlewareRoute
  '/register': typeof RegisterRoute
  '/dashboard': typeof AuthDashboardRouteWithChildren
  '/dashboard/tools': typeof AuthDashboardToolsRoute
  '/dashboard/vault': typeof AuthDashboardVaultRoute
  '/dashboard/': typeof AuthDashboardIndexRoute
  '/dashboard/transforms/$transformId': typeof AuthDashboardTransformsTransformIdRoute
  '/dashboard/investigations': typeof AuthDashboardInvestigationsIndexRoute
  '/dashboard/transforms': typeof AuthDashboardTransformsIndexRoute
  '/dashboard/investigations/$investigationId': typeof AuthDashboardInvestigationsInvestigationIdIndexRoute
  '/dashboard/investigations/$investigationId/$type/$id': typeof AuthDashboardInvestigationsInvestigationIdTypeIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/middleware': typeof MiddlewareRoute
  '/register': typeof RegisterRoute
  '/dashboard/tools': typeof AuthDashboardToolsRoute
  '/dashboard/vault': typeof AuthDashboardVaultRoute
  '/dashboard': typeof AuthDashboardIndexRoute
  '/dashboard/transforms/$transformId': typeof AuthDashboardTransformsTransformIdRoute
  '/dashboard/investigations': typeof AuthDashboardInvestigationsIndexRoute
  '/dashboard/transforms': typeof AuthDashboardTransformsIndexRoute
  '/dashboard/investigations/$investigationId': typeof AuthDashboardInvestigationsInvestigationIdIndexRoute
  '/dashboard/investigations/$investigationId/$type/$id': typeof AuthDashboardInvestigationsInvestigationIdTypeIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/middleware': typeof MiddlewareRoute
  '/register': typeof RegisterRoute
  '/_auth/dashboard': typeof AuthDashboardRouteWithChildren
  '/_auth/dashboard/tools': typeof AuthDashboardToolsRoute
  '/_auth/dashboard/vault': typeof AuthDashboardVaultRoute
  '/_auth/dashboard/': typeof AuthDashboardIndexRoute
  '/_auth/dashboard/transforms/$transformId': typeof AuthDashboardTransformsTransformIdRoute
  '/_auth/dashboard/investigations/': typeof AuthDashboardInvestigationsIndexRoute
  '/_auth/dashboard/transforms/': typeof AuthDashboardTransformsIndexRoute
  '/_auth/dashboard/investigations/$investigationId/': typeof AuthDashboardInvestigationsInvestigationIdIndexRoute
  '/_auth/dashboard/investigations/$investigationId/$type/$id': typeof AuthDashboardInvestigationsInvestigationIdTypeIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/middleware'
    | '/register'
    | '/dashboard'
    | '/dashboard/tools'
    | '/dashboard/vault'
    | '/dashboard/'
    | '/dashboard/transforms/$transformId'
    | '/dashboard/investigations'
    | '/dashboard/transforms'
    | '/dashboard/investigations/$investigationId'
    | '/dashboard/investigations/$investigationId/$type/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/middleware'
    | '/register'
    | '/dashboard/tools'
    | '/dashboard/vault'
    | '/dashboard'
    | '/dashboard/transforms/$transformId'
    | '/dashboard/investigations'
    | '/dashboard/transforms'
    | '/dashboard/investigations/$investigationId'
    | '/dashboard/investigations/$investigationId/$type/$id'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/middleware'
    | '/register'
    | '/_auth/dashboard'
    | '/_auth/dashboard/tools'
    | '/_auth/dashboard/vault'
    | '/_auth/dashboard/'
    | '/_auth/dashboard/transforms/$transformId'
    | '/_auth/dashboard/investigations/'
    | '/_auth/dashboard/transforms/'
    | '/_auth/dashboard/investigations/$investigationId/'
    | '/_auth/dashboard/investigations/$investigationId/$type/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  MiddlewareRoute: typeof MiddlewareRoute
  RegisterRoute: typeof RegisterRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/middleware': {
      id: '/middleware'
      path: '/middleware'
      fullPath: '/middleware'
      preLoaderRoute: typeof MiddlewareRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard/': {
      id: '/_auth/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthDashboardIndexRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/vault': {
      id: '/_auth/dashboard/vault'
      path: '/vault'
      fullPath: '/dashboard/vault'
      preLoaderRoute: typeof AuthDashboardVaultRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/tools': {
      id: '/_auth/dashboard/tools'
      path: '/tools'
      fullPath: '/dashboard/tools'
      preLoaderRoute: typeof AuthDashboardToolsRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/transforms/': {
      id: '/_auth/dashboard/transforms/'
      path: '/transforms'
      fullPath: '/dashboard/transforms'
      preLoaderRoute: typeof AuthDashboardTransformsIndexRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/investigations/': {
      id: '/_auth/dashboard/investigations/'
      path: '/investigations'
      fullPath: '/dashboard/investigations'
      preLoaderRoute: typeof AuthDashboardInvestigationsIndexRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/transforms/$transformId': {
      id: '/_auth/dashboard/transforms/$transformId'
      path: '/transforms/$transformId'
      fullPath: '/dashboard/transforms/$transformId'
      preLoaderRoute: typeof AuthDashboardTransformsTransformIdRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/investigations/$investigationId/': {
      id: '/_auth/dashboard/investigations/$investigationId/'
      path: '/investigations/$investigationId'
      fullPath: '/dashboard/investigations/$investigationId'
      preLoaderRoute: typeof AuthDashboardInvestigationsInvestigationIdIndexRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
    '/_auth/dashboard/investigations/$investigationId/$type/$id': {
      id: '/_auth/dashboard/investigations/$investigationId/$type/$id'
      path: '/investigations/$investigationId/$type/$id'
      fullPath: '/dashboard/investigations/$investigationId/$type/$id'
      preLoaderRoute: typeof AuthDashboardInvestigationsInvestigationIdTypeIdRouteImport
      parentRoute: typeof AuthDashboardRoute
    }
  }
}

interface AuthDashboardRouteChildren {
  AuthDashboardToolsRoute: typeof AuthDashboardToolsRoute
  AuthDashboardVaultRoute: typeof AuthDashboardVaultRoute
  AuthDashboardIndexRoute: typeof AuthDashboardIndexRoute
  AuthDashboardTransformsTransformIdRoute: typeof AuthDashboardTransformsTransformIdRoute
  AuthDashboardInvestigationsIndexRoute: typeof AuthDashboardInvestigationsIndexRoute
  AuthDashboardTransformsIndexRoute: typeof AuthDashboardTransformsIndexRoute
  AuthDashboardInvestigationsInvestigationIdIndexRoute: typeof AuthDashboardInvestigationsInvestigationIdIndexRoute
  AuthDashboardInvestigationsInvestigationIdTypeIdRoute: typeof AuthDashboardInvestigationsInvestigationIdTypeIdRoute
}

const AuthDashboardRouteChildren: AuthDashboardRouteChildren = {
  AuthDashboardToolsRoute: AuthDashboardToolsRoute,
  AuthDashboardVaultRoute: AuthDashboardVaultRoute,
  AuthDashboardIndexRoute: AuthDashboardIndexRoute,
  AuthDashboardTransformsTransformIdRoute:
    AuthDashboardTransformsTransformIdRoute,
  AuthDashboardInvestigationsIndexRoute: AuthDashboardInvestigationsIndexRoute,
  AuthDashboardTransformsIndexRoute: AuthDashboardTransformsIndexRoute,
  AuthDashboardInvestigationsInvestigationIdIndexRoute:
    AuthDashboardInvestigationsInvestigationIdIndexRoute,
  AuthDashboardInvestigationsInvestigationIdTypeIdRoute:
    AuthDashboardInvestigationsInvestigationIdTypeIdRoute,
}

const AuthDashboardRouteWithChildren = AuthDashboardRoute._addFileChildren(
  AuthDashboardRouteChildren,
)

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  MiddlewareRoute: MiddlewareRoute,
  RegisterRoute: RegisterRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
