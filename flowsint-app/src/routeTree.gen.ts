/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RegisterImport } from './routes/register'
import { Route as MiddlewareImport } from './routes/middleware'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthDashboardImport } from './routes/_auth.dashboard'
import { Route as AuthDashboardIndexImport } from './routes/_auth.dashboard.index'
import { Route as AuthDashboardTransformsImport } from './routes/_auth.dashboard.transforms'
import { Route as AuthDashboardInvestigationsIndexImport } from './routes/_auth.dashboard.investigations.index'
import { Route as AuthDashboardTransformsTransformIdImport } from './routes/_auth.dashboard.transforms.$transformId'
import { Route as AuthDashboardInvestigationsInvestigationIdImport } from './routes/_auth.dashboard.investigations.$investigationId'
import { Route as AuthDashboardInvestigationsInvestigationIdIndexImport } from './routes/_auth.dashboard.investigations.$investigationId.index'
import { Route as AuthDashboardInvestigationsInvestigationIdTypeIdImport } from './routes/_auth.dashboard.investigations.$investigationId.$type.$id'

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const MiddlewareRoute = MiddlewareImport.update({
  id: '/middleware',
  path: '/middleware',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardIndexRoute = AuthDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthDashboardRoute,
} as any)

const AuthDashboardTransformsRoute = AuthDashboardTransformsImport.update({
  id: '/transforms',
  path: '/transforms',
  getParentRoute: () => AuthDashboardRoute,
} as any)

const AuthDashboardInvestigationsIndexRoute =
  AuthDashboardInvestigationsIndexImport.update({
    id: '/investigations/',
    path: '/investigations/',
    getParentRoute: () => AuthDashboardRoute,
  } as any)

const AuthDashboardTransformsTransformIdRoute =
  AuthDashboardTransformsTransformIdImport.update({
    id: '/$transformId',
    path: '/$transformId',
    getParentRoute: () => AuthDashboardTransformsRoute,
  } as any)

const AuthDashboardInvestigationsInvestigationIdRoute =
  AuthDashboardInvestigationsInvestigationIdImport.update({
    id: '/investigations/$investigationId',
    path: '/investigations/$investigationId',
    getParentRoute: () => AuthDashboardRoute,
  } as any)

const AuthDashboardInvestigationsInvestigationIdIndexRoute =
  AuthDashboardInvestigationsInvestigationIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthDashboardInvestigationsInvestigationIdRoute,
  } as any)

const AuthDashboardInvestigationsInvestigationIdTypeIdRoute =
  AuthDashboardInvestigationsInvestigationIdTypeIdImport.update({
    id: '/$type/$id',
    path: '/$type/$id',
    getParentRoute: () => AuthDashboardInvestigationsInvestigationIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/middleware': {
      id: '/middleware'
      path: '/middleware'
      fullPath: '/middleware'
      preLoaderRoute: typeof MiddlewareImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof AuthImport
    }
    '/_auth/dashboard/transforms': {
      id: '/_auth/dashboard/transforms'
      path: '/transforms'
      fullPath: '/dashboard/transforms'
      preLoaderRoute: typeof AuthDashboardTransformsImport
      parentRoute: typeof AuthDashboardImport
    }
    '/_auth/dashboard/': {
      id: '/_auth/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthDashboardIndexImport
      parentRoute: typeof AuthDashboardImport
    }
    '/_auth/dashboard/investigations/$investigationId': {
      id: '/_auth/dashboard/investigations/$investigationId'
      path: '/investigations/$investigationId'
      fullPath: '/dashboard/investigations/$investigationId'
      preLoaderRoute: typeof AuthDashboardInvestigationsInvestigationIdImport
      parentRoute: typeof AuthDashboardImport
    }
    '/_auth/dashboard/transforms/$transformId': {
      id: '/_auth/dashboard/transforms/$transformId'
      path: '/$transformId'
      fullPath: '/dashboard/transforms/$transformId'
      preLoaderRoute: typeof AuthDashboardTransformsTransformIdImport
      parentRoute: typeof AuthDashboardTransformsImport
    }
    '/_auth/dashboard/investigations/': {
      id: '/_auth/dashboard/investigations/'
      path: '/investigations'
      fullPath: '/dashboard/investigations'
      preLoaderRoute: typeof AuthDashboardInvestigationsIndexImport
      parentRoute: typeof AuthDashboardImport
    }
    '/_auth/dashboard/investigations/$investigationId/': {
      id: '/_auth/dashboard/investigations/$investigationId/'
      path: '/'
      fullPath: '/dashboard/investigations/$investigationId/'
      preLoaderRoute: typeof AuthDashboardInvestigationsInvestigationIdIndexImport
      parentRoute: typeof AuthDashboardInvestigationsInvestigationIdImport
    }
    '/_auth/dashboard/investigations/$investigationId/$type/$id': {
      id: '/_auth/dashboard/investigations/$investigationId/$type/$id'
      path: '/$type/$id'
      fullPath: '/dashboard/investigations/$investigationId/$type/$id'
      preLoaderRoute: typeof AuthDashboardInvestigationsInvestigationIdTypeIdImport
      parentRoute: typeof AuthDashboardInvestigationsInvestigationIdImport
    }
  }
}

// Create and export the route tree

interface AuthDashboardTransformsRouteChildren {
  AuthDashboardTransformsTransformIdRoute: typeof AuthDashboardTransformsTransformIdRoute
}

const AuthDashboardTransformsRouteChildren: AuthDashboardTransformsRouteChildren =
  {
    AuthDashboardTransformsTransformIdRoute:
      AuthDashboardTransformsTransformIdRoute,
  }

const AuthDashboardTransformsRouteWithChildren =
  AuthDashboardTransformsRoute._addFileChildren(
    AuthDashboardTransformsRouteChildren,
  )

interface AuthDashboardInvestigationsInvestigationIdRouteChildren {
  AuthDashboardInvestigationsInvestigationIdIndexRoute: typeof AuthDashboardInvestigationsInvestigationIdIndexRoute
  AuthDashboardInvestigationsInvestigationIdTypeIdRoute: typeof AuthDashboardInvestigationsInvestigationIdTypeIdRoute
}

const AuthDashboardInvestigationsInvestigationIdRouteChildren: AuthDashboardInvestigationsInvestigationIdRouteChildren =
  {
    AuthDashboardInvestigationsInvestigationIdIndexRoute:
      AuthDashboardInvestigationsInvestigationIdIndexRoute,
    AuthDashboardInvestigationsInvestigationIdTypeIdRoute:
      AuthDashboardInvestigationsInvestigationIdTypeIdRoute,
  }

const AuthDashboardInvestigationsInvestigationIdRouteWithChildren =
  AuthDashboardInvestigationsInvestigationIdRoute._addFileChildren(
    AuthDashboardInvestigationsInvestigationIdRouteChildren,
  )

interface AuthDashboardRouteChildren {
  AuthDashboardTransformsRoute: typeof AuthDashboardTransformsRouteWithChildren
  AuthDashboardIndexRoute: typeof AuthDashboardIndexRoute
  AuthDashboardInvestigationsInvestigationIdRoute: typeof AuthDashboardInvestigationsInvestigationIdRouteWithChildren
  AuthDashboardInvestigationsIndexRoute: typeof AuthDashboardInvestigationsIndexRoute
}

const AuthDashboardRouteChildren: AuthDashboardRouteChildren = {
  AuthDashboardTransformsRoute: AuthDashboardTransformsRouteWithChildren,
  AuthDashboardIndexRoute: AuthDashboardIndexRoute,
  AuthDashboardInvestigationsInvestigationIdRoute:
    AuthDashboardInvestigationsInvestigationIdRouteWithChildren,
  AuthDashboardInvestigationsIndexRoute: AuthDashboardInvestigationsIndexRoute,
}

const AuthDashboardRouteWithChildren = AuthDashboardRoute._addFileChildren(
  AuthDashboardRouteChildren,
)

interface AuthRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardRoute: AuthDashboardRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/middleware': typeof MiddlewareRoute
  '/register': typeof RegisterRoute
  '/dashboard': typeof AuthDashboardRouteWithChildren
  '/dashboard/transforms': typeof AuthDashboardTransformsRouteWithChildren
  '/dashboard/': typeof AuthDashboardIndexRoute
  '/dashboard/investigations/$investigationId': typeof AuthDashboardInvestigationsInvestigationIdRouteWithChildren
  '/dashboard/transforms/$transformId': typeof AuthDashboardTransformsTransformIdRoute
  '/dashboard/investigations': typeof AuthDashboardInvestigationsIndexRoute
  '/dashboard/investigations/$investigationId/': typeof AuthDashboardInvestigationsInvestigationIdIndexRoute
  '/dashboard/investigations/$investigationId/$type/$id': typeof AuthDashboardInvestigationsInvestigationIdTypeIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/middleware': typeof MiddlewareRoute
  '/register': typeof RegisterRoute
  '/dashboard/transforms': typeof AuthDashboardTransformsRouteWithChildren
  '/dashboard': typeof AuthDashboardIndexRoute
  '/dashboard/transforms/$transformId': typeof AuthDashboardTransformsTransformIdRoute
  '/dashboard/investigations': typeof AuthDashboardInvestigationsIndexRoute
  '/dashboard/investigations/$investigationId': typeof AuthDashboardInvestigationsInvestigationIdIndexRoute
  '/dashboard/investigations/$investigationId/$type/$id': typeof AuthDashboardInvestigationsInvestigationIdTypeIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/middleware': typeof MiddlewareRoute
  '/register': typeof RegisterRoute
  '/_auth/dashboard': typeof AuthDashboardRouteWithChildren
  '/_auth/dashboard/transforms': typeof AuthDashboardTransformsRouteWithChildren
  '/_auth/dashboard/': typeof AuthDashboardIndexRoute
  '/_auth/dashboard/investigations/$investigationId': typeof AuthDashboardInvestigationsInvestigationIdRouteWithChildren
  '/_auth/dashboard/transforms/$transformId': typeof AuthDashboardTransformsTransformIdRoute
  '/_auth/dashboard/investigations/': typeof AuthDashboardInvestigationsIndexRoute
  '/_auth/dashboard/investigations/$investigationId/': typeof AuthDashboardInvestigationsInvestigationIdIndexRoute
  '/_auth/dashboard/investigations/$investigationId/$type/$id': typeof AuthDashboardInvestigationsInvestigationIdTypeIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/middleware'
    | '/register'
    | '/dashboard'
    | '/dashboard/transforms'
    | '/dashboard/'
    | '/dashboard/investigations/$investigationId'
    | '/dashboard/transforms/$transformId'
    | '/dashboard/investigations'
    | '/dashboard/investigations/$investigationId/'
    | '/dashboard/investigations/$investigationId/$type/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/middleware'
    | '/register'
    | '/dashboard/transforms'
    | '/dashboard'
    | '/dashboard/transforms/$transformId'
    | '/dashboard/investigations'
    | '/dashboard/investigations/$investigationId'
    | '/dashboard/investigations/$investigationId/$type/$id'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/middleware'
    | '/register'
    | '/_auth/dashboard'
    | '/_auth/dashboard/transforms'
    | '/_auth/dashboard/'
    | '/_auth/dashboard/investigations/$investigationId'
    | '/_auth/dashboard/transforms/$transformId'
    | '/_auth/dashboard/investigations/'
    | '/_auth/dashboard/investigations/$investigationId/'
    | '/_auth/dashboard/investigations/$investigationId/$type/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
  MiddlewareRoute: typeof MiddlewareRoute
  RegisterRoute: typeof RegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
  MiddlewareRoute: MiddlewareRoute,
  RegisterRoute: RegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login",
        "/middleware",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/dashboard"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/middleware": {
      "filePath": "middleware.tsx"
    },
    "/register": {
      "filePath": "register.tsx"
    },
    "/_auth/dashboard": {
      "filePath": "_auth.dashboard.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/dashboard/transforms",
        "/_auth/dashboard/",
        "/_auth/dashboard/investigations/$investigationId",
        "/_auth/dashboard/investigations/"
      ]
    },
    "/_auth/dashboard/transforms": {
      "filePath": "_auth.dashboard.transforms.tsx",
      "parent": "/_auth/dashboard",
      "children": [
        "/_auth/dashboard/transforms/$transformId"
      ]
    },
    "/_auth/dashboard/": {
      "filePath": "_auth.dashboard.index.tsx",
      "parent": "/_auth/dashboard"
    },
    "/_auth/dashboard/investigations/$investigationId": {
      "filePath": "_auth.dashboard.investigations.$investigationId.tsx",
      "parent": "/_auth/dashboard",
      "children": [
        "/_auth/dashboard/investigations/$investigationId/",
        "/_auth/dashboard/investigations/$investigationId/$type/$id"
      ]
    },
    "/_auth/dashboard/transforms/$transformId": {
      "filePath": "_auth.dashboard.transforms.$transformId.tsx",
      "parent": "/_auth/dashboard/transforms"
    },
    "/_auth/dashboard/investigations/": {
      "filePath": "_auth.dashboard.investigations.index.tsx",
      "parent": "/_auth/dashboard"
    },
    "/_auth/dashboard/investigations/$investigationId/": {
      "filePath": "_auth.dashboard.investigations.$investigationId.index.tsx",
      "parent": "/_auth/dashboard/investigations/$investigationId"
    },
    "/_auth/dashboard/investigations/$investigationId/$type/$id": {
      "filePath": "_auth.dashboard.investigations.$investigationId.$type.$id.tsx",
      "parent": "/_auth/dashboard/investigations/$investigationId"
    }
  }
}
ROUTE_MANIFEST_END */
